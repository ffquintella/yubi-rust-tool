.TH ykchalresp 1 "September 2025" "yubi-rust-tool" "User Commands"
.SH NAME
ykchalresp \- HMAC-SHA1 challenge response (hardware or software)
.SH SYNOPSIS
.B ykchalresp
[
.B -1
|
.B -2
]
[
.B -x
]
[
.I challenge
]
.SH DESCRIPTION
.B ykchalresp
computes an HMAC-SHA1 response for a provided challenge using the YubiKey's
HMAC-SHA1 challenge-response capability (hardware mode), or a configured
software secret (simulation mode).
.P
By default it talks to a real YubiKey directly via the Rust
.B yubikey-hmac-otp
crate. Use
.B -s
to simulate locally without hardware.
.PP
If no
.I challenge
is supplied, input is read from standard input. By default (no
.B -x
), the challenge is treated as raw text and the response is printed in
modhex. With
.B -x
the challenge is interpreted as hex and the response is printed as hex.
.SH OPTIONS
.TP
.B -1
Use slot 1 secret.
.TP
.B -2
Use slot 2 secret (default).
.TP
.B -x
Hex mode: challenge is hex; output is hex.
.TP
.B -s
Simulation mode: do not access hardware; compute using configured secret.
.TP
.B -h, --help
Show usage and exit.
.TP
.B -V, --version
Show version and exit.
.SH ENVIRONMENT (simulation mode)
.TP
.B YKCHALRESP_SLOT1_KEY
Hex-encoded secret for slot 1.
.TP
.B YKCHALRESP_SLOT2_KEY
Hex-encoded secret for slot 2.
.SH FILES (simulation mode)
.TP
.I ~/.config/ykchalresp/slot1.key
Hex-encoded secret for slot 1.
.TP
.I ~/.config/ykchalresp/slot2.key
Hex-encoded secret for slot 2.
.SH EXIT STATUS
.TP
0
Success.
.TP
1
Missing secret or I/O error.
.TP
2
Invalid input or usage.
.SH EXAMPLES
.TP
Hardware, reading challenge from stdin and printing modhex:
.nf
  printf 'abcdef' | ykchalresp -2
.fi
.TP
Compute with hex challenge and hex output (slot 2):
.nf
  ykchalresp -2 -x deadbeef
.fi
.TP
Simulate using env secret and hex challenge:
.nf
  YKCHALRESP_SLOT2_KEY=001122... ykchalresp -s -2 -x deadbeef
.fi
.SH SEE ALSO
.BR ykpersonalize (1),
.BR ykman (1)
.SH AUTHOR
Generated by the yubi-rust-tool project.
